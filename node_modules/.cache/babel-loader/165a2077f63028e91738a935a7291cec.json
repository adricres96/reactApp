{"ast":null,"code":"import _classCallCheck from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { store } from '../index';\nimport React from 'react';\nimport { connect } from 'react-redux';\nvar elemento = {\n  title: \"hehe\",\n  component: [\"hlell\"]\n};\nvar list = [elemento];\n\nvar CV =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CV, _React$Component);\n\n  function CV(props) {\n    var _this;\n\n    _classCallCheck(this, CV);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CV).call(this, props));\n\n    _this.updateData = function () {\n      if (store.getState().actualSlide) {\n        console.log(\"Funciona el cambio de Slide\");\n      }\n    };\n\n    _this.unsuscribe = store.subscribe(_this.updateData);\n    var elemento = {\n      title: \"\",\n      component: []\n    };\n    var initialList = [elemento];\n    _this.state = {\n      list: initialList\n    };\n    return _this;\n  }\n\n  return CV;\n}(React.Component);\n\nexport default connect()(CV);","map":{"version":3,"sources":["/Users/crespadr/Documents/to_do_workspace/newReactApp/src/components/CV.tsx"],"names":["store","React","connect","elemento","title","component","list","CV","props","updateData","getState","actualSlide","console","log","unsuscribe","subscribe","initialList","state","Component"],"mappings":";;;;AAAA,SAAQA,KAAR,QAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAOA,IAAIC,QAAkB,GAAG;AAACC,EAAAA,KAAK,EAAC,MAAP;AAAeC,EAAAA,SAAS,EAAC,CAAC,OAAD;AAAzB,CAAzB;AAEA,IAAIC,IAAgB,GAAG,CAACH,QAAD,CAAvB;;IAGMI,E;;;;;AAEF,cAAYC,KAAZ,EAAsB;AAAA;;AAAA;;AAClB,4EAAMA,KAAN;;AADkB,UAStBC,UATsB,GAST,YAAM;AACf,UAAGT,KAAK,CAACU,QAAN,GAAiBC,WAApB,EAAgC;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;AACJ,KAbqB;;AAAA,UAetBC,UAfsB,GAeVd,KAAK,CAACe,SAAN,CAAgB,MAAKN,UAArB,CAfU;AAElB,QAAIN,QAAkB,GAAG;AAACC,MAAAA,KAAK,EAAC,EAAP;AAAUC,MAAAA,SAAS,EAAC;AAApB,KAAzB;AACA,QAAIW,WAAuB,GAAG,CAACb,QAAD,CAA9B;AACA,UAAKc,KAAL,GAAa;AACTX,MAAAA,IAAI,EAAEU;AADG,KAAb;AAJkB;AAOrB;;;EATYf,KAAK,CAACiB,S;;AAqBvB,eAAehB,OAAO,GAAGK,EAAH,CAAtB","sourcesContent":["import {store} from '../index'\nimport React from 'react'\nimport { any } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\ninterface Elemento {\n    title:string;\n    component: string[];\n}\n\nlet elemento: Elemento = {title:\"hehe\", component:[\"hlell\"]}\n\nlet list: Elemento[] = [elemento]\n\n\nclass CV extends React.Component<any,any> {\n    \n    constructor(props:any){\n        super(props);\n        let elemento: Elemento = {title:\"\",component:[]}\n        let initialList: Elemento[] = [elemento]\n        this.state = {\n            list: initialList\n        };\n    }\n\n    updateData = () => {\n        if(store.getState().actualSlide){\n            console.log(\"Funciona el cambio de Slide\")\n        }\n    }\n\n    unsuscribe= store.subscribe(this.updateData);\n\n}\n\nexport default connect()(CV); "]},"metadata":{},"sourceType":"module"}