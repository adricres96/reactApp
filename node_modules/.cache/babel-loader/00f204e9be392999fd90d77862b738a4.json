{"ast":null,"code":"import _classCallCheck from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/crespadr/Documents/to_do_workspace/newReactApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/crespadr/Documents/to_do_workspace/newReactApp/src/components/CV.tsx\";\nimport { store } from '../index';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setDropdownVisibilityFilter } from '../actions';\nvar elemento = {\n  title: \"hehe\",\n  component: [\"hlell\"]\n};\nvar list = [elemento];\n\nvar CV =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CV, _React$Component);\n\n  function CV(props) {\n    var _this;\n\n    _classCallCheck(this, CV);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CV).call(this, props));\n\n    _this.updateData = function () {\n      console.log(\"entra en el subscribe de cv para actualizar el viewController\");\n\n      _this.setState({\n        viewController: store.getState().listFilter\n      });\n    };\n\n    _this.clickComponent = function (index) {\n      var change = _this.state.viewController;\n      var listMaintain = _this.state.list;\n      change[index] = !change[index];\n\n      _this.setState({\n        list: listMaintain,\n        viewController: change\n      });\n\n      store.dispatch(setDropdownVisibilityFilter(_this.state.viewController));\n    };\n\n    var elemento = {\n      title: \"\",\n      component: []\n    };\n    var initialList = [elemento];\n    _this.state = {\n      list: initialList,\n      viewController: store.getState().listFilter\n    };\n    var unsuscribe = store.subscribe(_this.updateData);\n    return _this;\n  }\n\n  _createClass(CV, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"hola\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        style: \"position:center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        onClick: function onClick() {\n          _this2.clickComponent(0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Database\"))));\n    }\n  }]);\n\n  return CV;\n}(React.Component);\n\nexport default connect()(CV);","map":{"version":3,"sources":["/Users/crespadr/Documents/to_do_workspace/newReactApp/src/components/CV.tsx"],"names":["store","React","connect","setDropdownVisibilityFilter","elemento","title","component","list","CV","props","updateData","console","log","setState","viewController","getState","listFilter","clickComponent","index","change","state","listMaintain","dispatch","initialList","unsuscribe","subscribe","Component"],"mappings":";;;;;;AAAA,SAAQA,KAAR,QAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,2BAAT,QAA4C,YAA5C;AAOA,IAAIC,QAAkB,GAAG;AAACC,EAAAA,KAAK,EAAC,MAAP;AAAeC,EAAAA,SAAS,EAAC,CAAC,OAAD;AAAzB,CAAzB;AAEA,IAAIC,IAAgB,GAAG,CAACH,QAAD,CAAvB;;IAGMI,E;;;;;AAEF,cAAYC,KAAZ,EAAsB;AAAA;;AAAA;;AAClB,4EAAMA,KAAN;;AADkB,UAWtBC,UAXsB,GAWT,YAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;;AACA,YAAKC,QAAL,CAAc;AACVC,QAAAA,cAAc,EAAEd,KAAK,CAACe,QAAN,GAAiBC;AADvB,OAAd;AAIH,KAjBqB;;AAAA,UAmBtBC,cAnBsB,GAmBL,UAACC,KAAD,EAAkB;AAC/B,UAAIC,MAAM,GAAE,MAAKC,KAAL,CAAWN,cAAvB;AACA,UAAIO,YAAY,GAAG,MAAKD,KAAL,CAAWb,IAA9B;AACAY,MAAAA,MAAM,CAACD,KAAD,CAAN,GAAc,CAACC,MAAM,CAACD,KAAD,CAArB;;AACA,YAAKL,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAEc,YADI;AAEVP,QAAAA,cAAc,EAAEK;AAFN,OAAd;;AAIAnB,MAAAA,KAAK,CAACsB,QAAN,CAAenB,2BAA2B,CAAC,MAAKiB,KAAL,CAAWN,cAAZ,CAA1C;AACH,KA5BqB;;AAElB,QAAIV,QAAkB,GAAG;AAACC,MAAAA,KAAK,EAAC,EAAP;AAAUC,MAAAA,SAAS,EAAC;AAApB,KAAzB;AACA,QAAIiB,WAAuB,GAAG,CAACnB,QAAD,CAA9B;AACA,UAAKgB,KAAL,GAAa;AACTb,MAAAA,IAAI,EAAEgB,WADG;AAETT,MAAAA,cAAc,EAAEd,KAAK,CAACe,QAAN,GAAiBC;AAFxB,KAAb;AAIA,QAAIQ,UAAU,GAAExB,KAAK,CAACyB,SAAN,CAAgB,MAAKf,UAArB,CAAhB;AARkB;AASrB;;;;6BAqBO;AAAA;;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACO,cAAL,CAAoB,CAApB;AAAuB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,CAFJ,CADJ;AAWH;;;;EA5CYhB,KAAK,CAACyB,S;;AAiDvB,eAAexB,OAAO,GAAGM,EAAH,CAAtB","sourcesContent":["import {store} from '../index'\nimport React from 'react'\nimport { any } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setDropdownVisibilityFilter } from '../actions';\n\ninterface Elemento {\n    title:string;\n    component: string[];\n}\n\nlet elemento: Elemento = {title:\"hehe\", component:[\"hlell\"]}\n\nlet list: Elemento[] = [elemento]\n\n\nclass CV extends React.Component<any,any> {\n    \n    constructor(props:any){\n        super(props);\n        let elemento: Elemento = {title:\"\",component:[]}\n        let initialList: Elemento[] = [elemento]\n        this.state = {\n            list: initialList,\n            viewController: store.getState().listFilter\n        };\n        let unsuscribe= store.subscribe(this.updateData);\n    }\n\n    updateData = () => {\n        console.log(\"entra en el subscribe de cv para actualizar el viewController\")\n        this.setState({\n            viewController: store.getState().listFilter\n        }) \n        \n    }\n\n    clickComponent = (index:number) => {\n        let change= this.state.viewController;\n        let listMaintain = this.state.list;\n        change[index]=!change[index]\n        this.setState({\n            list: listMaintain,\n            viewController: change\n        })\n        store.dispatch(setDropdownVisibilityFilter(this.state.viewController));\n    }\n\n    render(){\n        return(\n            <div>\n                <p>hola</p>\n                <div className=\"row\">\n                    <div className=\"col-md-12\" style=\"position:center\">\n                        <h2 onClick={() => {this.clickComponent(0)}}>Database</h2>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n    \n\n}\n\nexport default connect()(CV); "]},"metadata":{},"sourceType":"module"}