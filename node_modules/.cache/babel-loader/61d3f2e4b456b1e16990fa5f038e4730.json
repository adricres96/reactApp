{"ast":null,"code":"import _classCallCheck from \"/Users/crespadr/Documents/react/basics/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/crespadr/Documents/react/basics/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/crespadr/Documents/react/basics/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/crespadr/Documents/react/basics/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/crespadr/Documents/react/basics/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/crespadr/Documents/react/basics/my-app/src/MemeGenerator.js\";\nimport React, { Component } from \"react\";\n/**\n * Initialize state to save the following data:\n *      top text\n *      bottom text\n *      random image (intialize with \"http://i.imgflip.com/1bij.jpg\")\n */\n\nvar MemeGenerator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MemeGenerator, _Component);\n\n  function MemeGenerator() {\n    var _this;\n\n    _classCallCheck(this, MemeGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MemeGenerator).call(this));\n    _this.state = {\n      top: \"initTop\",\n      bottom: \"Bot\",\n      img: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    return _this;\n  }\n  /**\n          * We'll be using an API that provides a bunch of meme images.\n          *\n          * Your task:\n          * make an API call to \"https://api.imgflip.com/get_memes\" and save the\n          * data that comes back (`response.data.memes`) to a new state property\n          * called `allMemeImgs`. (The data that comes back is an array)\n          */\n\n\n  _createClass(MemeGenerator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.imgflip.com/get_memes\").then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var memes = response.data.memes;\n        console.log(memes[0]);\n\n        _this2.setState({\n          allMemeImgs: memes\n        });\n      });\n    }\n  }, {\n    key: \"ChangeTopText\",\n    value: function ChangeTopText(props) {\n      console.log(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.top, \"    \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.bottom, \" \"));\n    }\n  }]);\n\n  return MemeGenerator;\n}(Component);\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/crespadr/Documents/react/basics/my-app/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","state","top","bottom","img","allMemeImgs","fetch","then","response","json","memes","data","console","log","setState","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA;;;;;;;IAOMC,a;;;;;AACF,2BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAY;AACXC,MAAAA,GAAG,EAAE,SADM;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,GAAG,EAAE,+BAHM;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAZ;AAFU;AAQb;AAEJ;;;;;;;;;;;;wCASoB;AAAA;;AACTC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAC,QAAQ,EAAI;AAAA,YACPE,KADO,GACEF,QAAQ,CAACG,IADX,CACPD,KADO;AAEdE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAAC,CAAD,CAAjB;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AAAET,UAAAA,WAAW,EAAEK;AAAf,SAAd;AACH,OANL;AAOH;;;kCAEMK,K,EAAM;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA;;;6BAEW;AACL,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIL;AAAK,QAAA,GAAG,EAAE,KAAKd,KAAL,CAAWG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKH,KAAL,CAAWC,GAAjB,SALK,EAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKD,KAAL,CAAWE,MAAjB,MANK,CADD;AAYH;;;;EA/CuBJ,S;;AAkD5B,eAAeC,aAAf","sourcesContent":["import React, {Component} from \"react\"\n\n/**\n * Initialize state to save the following data:\n *      top text\n *      bottom text\n *      random image (intialize with \"http://i.imgflip.com/1bij.jpg\")\n */\n\nclass MemeGenerator extends Component {\n    constructor() {\n        super()\n        this.state ={\n        \ttop: \"initTop\",\n        \tbottom: \"Bot\",\n        \timg: \"http://i.imgflip.com/1bij.jpg\",\n        \tallMemeImgs: []\n        }\n    }\n\n\t/**\n         * We'll be using an API that provides a bunch of meme images.\n         *\n         * Your task:\n         * make an API call to \"https://api.imgflip.com/get_memes\" and save the\n         * data that comes back (`response.data.memes`) to a new state property\n         * called `allMemeImgs`. (The data that comes back is an array)\n         */\n\n\tcomponentDidMount() {\n            fetch(\"https://api.imgflip.com/get_memes\")\n                .then(response => response.json())\n                .then(response => {\n                    const {memes} = response.data\n                    console.log(memes[0])\n                    this.setState({ allMemeImgs: memes })\n                })\n        }\n\n\tChangeTopText(props){\n\t\tconsole.log(props);\n\t}\n\n    render() {\n        return (\n        \t<div>\n\n\n\n\t\t\t\t<img src={this.state.img}></img>\n\t\t\t\t<div>{this.state.top}    </div>\n\t\t\t\t<div>{this.state.bottom} </div>\n\n\n\t\t\t</div>\n        )\n    }\n}\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}